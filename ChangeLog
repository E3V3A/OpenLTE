Version       Contents
v00.01.00     First Octave release containing PSS, SSS, CRS, and PBCH
              transmission and reception for FDD
v00.02.00     Octave release with fixes in the license statement and a
              bug fix in lte_fdd_dl_receive.m
v00.03.00     Octave release with support for PDSCH transmission and
              reception for SIB1 encoding/decoding.  This includes
              turbo encoding/decoding.
v00.04.00     First release with C++ gnuradio support.  Contains PSS
              SSS, CRS, and PBCH reception for FDD in C++ for gnuradio.
v00.05.00     C++ changes: Fixed bug in frequency offset removal,
              added PDSCH reception for SIB1 decoding (including turbo
              decoding).
              Octave changes: Fixed bug in 3 antenna spacial multiplexing
              (lte_layer_mapper).  Fixed bug in 16QAM
              (lte_modulation_mapper).  Fixed parameter conversions in
              SIB1 unpacking.
v00.05.01     Fixed two bugs in liblte_phy.cc.  One relating to symb_starts
              going negative in find_pss_and_fine_timing.  One relating to
              using sss_re_5 instead of sss_im_5 in find_sss.
v00.05.02     Fixed another bug in liblte_phy.cc relating to frame_start_idx
              going negative in find_sss.
v00.05.03     Added more DL transmit functionality, rearranged liblte_phy to
              match the specs, and fixed several bugs: 1) frame_start_idx
              going negative in find_sss, 2) PDCCH sizes were too small,
              3) PDCCH reg calculation was wrong, 4) rate match/unmatch bit
              packing, 5) I/Q swap in LTE_fdd_dl_file_scan.
v00.05.04     Fixed bugs in liblte_phy.cc in turbo_decode, rate_unmatch_turbo,
              pdsch_channel_encode, and pdcch_channel_encode.  Added number of
              bits used to SIB1 pack in liblte_rrc.cc.
v00.06.00     Enabled fftw input, output, and plan from phy_struct in liblte_phy.
              Added BER tolerance to CFI decoding.  Added a new gnuradio app
              for generating an I/Q file with PSS, SSS, CRS, PBCH, PDCCH, and
              PDSCH.
v00.06.01     Added RRC support for packing/unpacking SIB2, SIB3, SIB4, and SIB8.
              Added states and state memory to the file scan sample buffer.
              Updated the file scan and file generator to use the latest library.
v00.06.02     Added soft bit turbo decoding, random access and paging PDCCH decoding,
              and more RRC support.
v00.06.03     Added SIB2 support and interactive configuration to file_gen app.
              Added multiple eNB decode support to libraries and file_scan app.
v00.06.04     Optimized the psuedo random sequence generator, added pre-configuring
              of the cell specific reference signals, and fixed 4 antenna reception.
v00.06.05     Added SIB3, SIB4, and SIB8 support to the file_gen app, fixed a bug
              in the PHICH mapping, fixed the file size bug with the file_gen app,
              and pulled in a patch for 64 bit support.
v00.07.00     Moved from automake to cmake.
v00.07.01     Added -fPIC to compile flags and updated README.
v00.08.00     Added a scanner application with support for rtl-sdr hardware.
              Changed the lte library to support multiple sampling rates, integer
              frequency offset detection, more RRC message/IE packing/unpacking,
              interface and network name resolution routines.  Added a tools
              library with support for socket wrapping.  Added test loading
              to the file scan and generator apps.  Fixed bugs in the file scan
              application.
v00.08.01     Converted fftw from double to single precision.  Added paging
              message printing.  Fixed bugs in lte_fdd_dl_receive.m.
v00.08.02     Fixed two indexing bugs in liblte_phy.cc.
v00.08.03     Added MAC functionality to the LTE library, fixed bugs in RRC portion
              of the LTE library, and added hackrf and SIB decode and print support
              to the scanner app.
v00.09.00     Updated to support GnuRadio 3.7, added PRACH support to liblte_phy,
              cleaned up PRACH support in octave, moved to using socket select with
              a timeout in libtools, added a new hardware discovery mechanism in
              LTE_fdd_dl_scan, and added a file recording application.
v00.09.01     Implemented liblte_phy routines for determining TBS, MCS, N_prb, and
              N_cce, fixed a bug in the RIV calculation of dci_1a_unpack, added error
              checking on sizes passed to memcpy in liblte_rrc, added support for
              changing the sample rate in the LTE_fdd_dl_file_gen app, and added
              finding FFTW to cmake.
v00.09.02     Added support for setting the sample rate and output data type in the
              LTE_fdd_dl_file_gen app and the sample rate and input data type in the
              LTE_fdd_dl_file_scan app to make the LTE_fdd_dl_file_gen,
              LTE_fdd_dl_file_scan, and LTE_file_recorder applications compatible,
              added uplink demodulation reference signal generation to the octave
              code.
v00.10.00     Added LTE_fdd_enodeb application using a USRP B2X0 currently with
              DL transmit only, added support for USRP B2X0 in LTE_fdd_dl_scan
              and LTE_file_recorder, and fixed a bug genererating the references
              for the second slot in lte_generate_dmrs_pusch.m.
v00.10.01     Fixed a bug with the receive size used in LTE_fdd_enb_msgq.cc.
v00.10.02     Added support for bladeRF in LTE_fdd_dl_scan and LTE_file_recorder,
              removed cmake requirements for rtl-sdr and hackrf.
v00.10.03     Fixed a PDSCH mapping bug in the lte_fdd_dl_transmit octave
              routine.
v00.10.04     Fixed a bug in LTE_fdd_enodeb dealing with saturation of baseband
              transmit samples.
v00.11.00     Fixed a bug with transmitting SIB2 for 1.4MHz bandwidth in
              LTE_fdd_dl_file_gen and LTE_fdd_enodeb, fixed several bugs in
              liblte_phy.cc, LTE_fdd_enodeb, and lte_prach_detector.m, and
              added PRACH detection processing in LTE_fdd_enodeb.
v00.12.00     Added DL-SCH/UL-SCH MAC PDU processing, added PUSCH mod/demod
              support, added more RRC support, and added PUSCH mod/demod support
              in octave.
v00.12.01     Pulled in patches from Astrasel to initialize the frequency offset
              estimate array in liblte_phy_dl_find_coarse_timing_and_freq_offset,
              from Jevgenij for supporting non-B2X0 USRPs in LTE_fdd_dl_scan, from
              Max Suraev for more descriptive start failures in LTE_fdd_enodeb, and
              from Andrew Murphy to add DCI 1C unpacking to the LTE library, also
              added support for PRB allocation differences in each slot and fixed
              a bug in lte_fdd_dl_transmit relating to PDCCH REG mapping.
v00.13.00     Added MAC control element handling, PHICH support, TPC support, and
              RRC DL CCCH message support to the LTE library, added PCAP support,
              UL and DL CCCH MAC support, communication up to RRC, UL CCCH RRC
              support, radio bearer, timer, and timer manager support to the eNodeB.
v00.14.00     Split LIBLTE_MSG_STRUCT into bit and byte messages, fixed a bug when
              adding more than 1 CCE to PDCCH, added MME, RLC, MAC padding LCID,
              TPC for DCI 0, RRC UL DCCH message processing, and DCI 0 pack support
              to the LTE library, added PCAP support to LTE_fdd_dl_scan, added HSS,
              QoS, uplink scheduling, RRC and MME NAS message handling, and RLC AM
              processing support, omitting the path from __FILE__, and deleteing
              users on C-RNTI expiration in LTE_fdd_enodeb.
v00.14.01     Pulled in patches from Mike Peters to fix an uninitialized N_bits
              value in liblte, Tim O'Shea to properly reference UHD libraries and
              include directories for cmake, Jeff Long to fix a mutex double
              unlock bug, Jeff Long to optimally set the master clock rate for
              USRP B2X0 in the LTE_fdd_dl_scan application, and added clock source
              as a configurable parameter in the LTE_fdd_enodeb application.
v00.15.00     Added make requirement for polarSSL, common, pdcp, and security
              portions of liblte, more decoding/encoding to liblte_mme and
              liblte_rrc, NACK support to liblte_rlc, and many changes to
              LTE_fdd_enodeb (limit PCAP output, authentication vector support,
              HSS interface support, message parsers/senders and state machines
              for MME, RRC command messages, transmit functionality for PDCP,
              RLC, and RRC, and refactoring of user identities).
v00.16.00     Added more MME decoding and encoding and security functions for
              key generation and EIA2 to the LTE library.  Added authentication,
              security mode, and sequence number resynch support to MME/HSS,
              added read only parameters for UL EARFCN, DL center frequency, and
              UL center frequency, fixed bugs with stop and t_poll_retransmit,
              and combined the contention resolution identity and first DL RLC
              message in LTE_fdd_enodeb.
v00.17.00     Added more MME and RRC decoding and encoding and integrity protection
              of PDCP control messages in the LTE library.  Added configuration
              and user file support, PDCP security, RRC security mode command,
              SRB2 setup, RRC connection reconfiguration, MME EMM attach, MME
              ESM default bearer setup, and M-TMSI assignment to LTE_fdd_enodeb.
v00.18.00     Added SIB13 packing and printing for LTE_fdd_dl_file_scan and
              pulled in a patch from Andrew Murphy to add SIB13 unpacking and
              printing for LTE_fdd_dl_scan.
